# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from cgi import test
from PyQt5 import QtCore, QtGui, QtWidgets 
from PyQt5.QtWidgets import QWidget, QMessageBox
from PyQt5.QtCore import QTimer
from Gui.python.Peltier import PeltierController

class Peltia(QWidget):
    def __init__(self, dimension):
        super(Peltia, self).__init__()
        self.MainWindow = QtWidgets.QMainWindow()
        
        self.pelt = PeltierController('com4',9600)
        #Create a timer that sends out a signal at regular intervals
        self.timer = QTimer()
        self.timer.timeout.connect(self.showTemp)

        self.setupUi(self.MainWindow)
        self.timer.start(1000) # Send the timer signal every 1000ms

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(400, 300)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.currentTempDisplay = QtWidgets.QLCDNumber(self.centralwidget)
        self.currentTempDisplay.setObjectName("currentTempDisplay")
        self.gridLayout.addWidget(self.currentTempDisplay, 3, 0, 1, 1)
        self.setTempButton = QtWidgets.QPushButton(self.centralwidget)
        self.setTempButton.setObjectName("setTempButton")
        self.gridLayout.addWidget(self.setTempButton, 1, 1, 1, 1)
        self.setTempInput = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.setTempInput.setObjectName("setTempInput")
        self.gridLayout.addWidget(self.setTempInput, 1, 0, 1, 1)
        self.currentTempLabel = QtWidgets.QLabel(self.centralwidget)
        self.currentTempLabel.setObjectName("currentTempLabel")
        self.gridLayout.addWidget(self.currentTempLabel, 2, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 532, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.setTempButton.clicked.connect(self.setTemp)


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Set Temperature"))
        self.setTempButton.setText(_translate("MainWindow", "Set Temp"))
        self.currentTempLabel.setText(_translate("MainWindow", "Current Temp"))

    def setTemp(self):
        self.pelt.setTemperature(self.setTempInput.value())
        # Send temperature reading to device
    
    def getTemp(self):
        return self.pelt.readTemperature()

    def showTemp(self):
        try:
            temp = self.getTemp()
            self.currentTempDisplay.display(temp)
        except Exception:
            self.msg = QMessageBox(self)
            self.msg.setText("Can't read temperature")
        
    


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Peltia(500)
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
